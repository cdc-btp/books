{
  "openapi": "3.0.2",
  "info": {
    "title": "Use @title: '...' on your CDS service to provide a meaningful title.",
    "description": "Use @Core.LongDescription: '...' on your CDS service to provide a meaningful description.",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.01",
  "x-sap-shortText": "Use @Core.Description: '...' on your CDS service to provide a meaningful short text.",
  "servers": [
    {
      "url": "/my-orders"
    }
  ],
  "tags": [
    {
      "name": "Currencies"
    },
    {
      "name": "Currencies_texts"
    },
    {
      "name": "Genres"
    },
    {
      "name": "Genres_texts"
    },
    {
      "name": "Order"
    },
    {
      "name": "Order_Items"
    },
    {
      "name": "Product"
    },
    {
      "name": "Product_texts"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Sends a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Order HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies": {
      "get": {
        "summary": "Retrieves a list of currencies.",
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc",
                  "symbol",
                  "symbol desc",
                  "minorUnit",
                  "minorUnit desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Currencies"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single currency.",
        "tags": [
          "Currencies"
        ],
        "requestBody": {
          "description": "New currency",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Currencies-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single currency.",
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single currency.",
        "tags": [
          "Currencies"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Currencies-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single currency.",
        "tags": [
          "Currencies"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')/localized": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves localized of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')/texts": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of texts of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Currencies_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single text of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Currencies_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies_texts": {
      "get": {
        "summary": "Retrieves a list of currencies_texts.",
        "tags": [
          "Currencies_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Currencies_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "requestBody": {
          "description": "New currencies_text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Currencies_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created currencies_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "key: locale",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Currencies_texts-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres": {
      "get": {
        "summary": "Retrieves a list of genres.",
        "tags": [
          "Genres"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "ID",
                  "ID desc",
                  "parent_ID",
                  "parent_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "ID",
                  "parent_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "parent",
                  "children",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved genres",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Genres",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Genres"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single genre.",
        "tags": [
          "Genres"
        ],
        "requestBody": {
          "description": "New genre",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Genres-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created genre",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single genre.",
        "tags": [
          "Genres"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "ID",
                  "parent_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "parent",
                  "children",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved genre",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single genre.",
        "tags": [
          "Genres"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Genres-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single genre.",
        "tags": [
          "Genres"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres({ID})/children": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of children of a genre.",
        "tags": [
          "Genres"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "ID",
                  "ID desc",
                  "parent_ID",
                  "parent_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "ID",
                  "parent_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "parent",
                  "children",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved children",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Genres",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Genres"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single child of a genre.",
        "tags": [
          "Genres"
        ],
        "requestBody": {
          "description": "New child",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Genres-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created child",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres({ID})/localized": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves localized of a genre.",
        "tags": [
          "Genres",
          "Genres_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "ID"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres({ID})/parent": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves parent of a genre.",
        "tags": [
          "Genres"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "ID",
                  "parent_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "parent",
                  "children",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved parent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres({ID})/texts": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of texts of a genre.",
        "tags": [
          "Genres",
          "Genres_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "ID",
                  "ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "ID"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Genres_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Genres_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single text of a genre.",
        "tags": [
          "Genres",
          "Genres_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Genres_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres_texts": {
      "get": {
        "summary": "Retrieves a list of genres_texts.",
        "tags": [
          "Genres_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "ID",
                  "ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "ID"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved genres_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Genres_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Genres_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single genres_text.",
        "tags": [
          "Genres_texts"
        ],
        "requestBody": {
          "description": "New genres_text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Genres_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created genres_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Genres_texts(locale='{locale}',ID={ID})": {
      "parameters": [
        {
          "description": "key: locale",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single genres_text.",
        "tags": [
          "Genres_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "ID"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved genres_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single genres_text.",
        "tags": [
          "Genres_texts"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Genres_texts-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single genres_text.",
        "tags": [
          "Genres_texts"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Order": {
      "get": {
        "summary": "Retrieves a list of order.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "buyer",
                  "buyer desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "buyer"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "Items"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Order",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Order({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single order.",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "buyer"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "Items"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Order"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Order({ID})/Items": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of items of a order.",
        "tags": [
          "Order",
          "Order_Items"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "up__ID desc",
                  "pos",
                  "pos desc",
                  "product_ID",
                  "product_ID desc",
                  "quantity",
                  "quantity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "pos",
                  "product_ID",
                  "quantity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Order_Items",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Order_Items"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single item of a order.",
        "tags": [
          "Order",
          "Order_Items"
        ],
        "requestBody": {
          "description": "New item",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Order_Items-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Order_Items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Order_Items": {
      "get": {
        "summary": "Retrieves a list of order_ items.",
        "tags": [
          "Order_Items"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "up__ID desc",
                  "pos",
                  "pos desc",
                  "product_ID",
                  "product_ID desc",
                  "quantity",
                  "quantity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "pos",
                  "product_ID",
                  "quantity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved order_ items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Order_Items",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Order_Items"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single order_ item.",
        "tags": [
          "Order_Items"
        ],
        "requestBody": {
          "description": "New order_ item",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Order_Items-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created order_ item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Order_Items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Order_Items(up__ID={up__ID},pos={pos})": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        {
          "description": "key: pos",
          "in": "path",
          "name": "pos",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single order_ item.",
        "tags": [
          "Order_Items"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "pos",
                  "product_ID",
                  "quantity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved order_ item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Order_Items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single order_ item.",
        "tags": [
          "Order_Items"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Order_Items-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single order_ item.",
        "tags": [
          "Order_Items"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Order_Items(up__ID={up__ID},pos={pos})/product": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        {
          "description": "key: pos",
          "in": "path",
          "name": "pos",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves product of a order_ item.",
        "tags": [
          "Order_Items",
          "Product"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "genre_ID",
                  "descr",
                  "stock",
                  "ID",
                  "title",
                  "price",
                  "currency_code",
                  "image"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "genre",
                  "currency",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Order_Items(up__ID={up__ID},pos={pos})/up_": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        {
          "description": "key: pos",
          "in": "path",
          "name": "pos",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves up_ of a order_ item.",
        "tags": [
          "Order_Items",
          "Order"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "buyer"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "Items"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved up_",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Order"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product": {
      "get": {
        "summary": "Retrieves a list of product.",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "genre_ID",
                  "genre_ID desc",
                  "descr",
                  "descr desc",
                  "stock",
                  "stock desc",
                  "ID",
                  "ID desc",
                  "title",
                  "title desc",
                  "price",
                  "price desc",
                  "currency_code",
                  "currency_code desc",
                  "image",
                  "image desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "genre_ID",
                  "descr",
                  "stock",
                  "ID",
                  "title",
                  "price",
                  "currency_code",
                  "image"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "genre",
                  "currency",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Product",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single product.",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "genre_ID",
                  "descr",
                  "stock",
                  "ID",
                  "title",
                  "price",
                  "currency_code",
                  "image"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "genre",
                  "currency",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product({ID})/currency": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves currency of a product.",
        "tags": [
          "Product",
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product({ID})/genre": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves genre of a product.",
        "tags": [
          "Product",
          "Genres"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "ID",
                  "parent_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "parent",
                  "children",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved genre",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Genres"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product({ID})/localized": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves localized of a product.",
        "tags": [
          "Product",
          "Product_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "descr",
                  "ID",
                  "title"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Product_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product({ID})/texts": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of texts of a product.",
        "tags": [
          "Product",
          "Product_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "descr",
                  "descr desc",
                  "ID",
                  "ID desc",
                  "title",
                  "title desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "descr",
                  "ID",
                  "title"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Product_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Product_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single text of a product.",
        "tags": [
          "Product",
          "Product_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Product_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Product_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product_texts": {
      "get": {
        "summary": "Retrieves a list of product_texts.",
        "tags": [
          "Product_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "descr",
                  "descr desc",
                  "ID",
                  "ID desc",
                  "title",
                  "title desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "descr",
                  "ID",
                  "title"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Product_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyOrders.Product_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single product_text.",
        "tags": [
          "Product_texts"
        ],
        "requestBody": {
          "description": "New product_text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Product_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Product_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product_texts(locale='{locale}',ID={ID})": {
      "parameters": [
        {
          "description": "key: locale",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single product_text.",
        "tags": [
          "Product_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "descr",
                  "ID",
                  "title"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrders.Product_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single product_text.",
        "tags": [
          "Product_texts"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyOrders.Product_texts-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single product_text.",
        "tags": [
          "Product_texts"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MyOrders.Currencies": {
        "title": "Currencies",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "minorUnit": {
            "type": "integer",
            "format": "int16",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Currencies_texts"
            }
          },
          "texts@count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyOrders.Currencies_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MyOrders.Currencies-create": {
        "title": "Currencies (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "minorUnit": {
            "type": "integer",
            "format": "int16",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Currencies_texts-create"
            }
          }
        },
        "required": [
          "code"
        ]
      },
      "MyOrders.Currencies-update": {
        "title": "Currencies (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "minorUnit": {
            "type": "integer",
            "format": "int16",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Currencies_texts-create"
            }
          }
        }
      },
      "MyOrders.Currencies_texts": {
        "title": "Currencies_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        }
      },
      "MyOrders.Currencies_texts-create": {
        "title": "Currencies_texts (for create)",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        },
        "required": [
          "locale",
          "code"
        ]
      },
      "MyOrders.Currencies_texts-update": {
        "title": "Currencies_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "MyOrders.Genres": {
        "title": "Genres",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyOrders.Genres"
              }
            ],
            "nullable": true
          },
          "parent_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Genres"
            }
          },
          "children@count": {
            "$ref": "#/components/schemas/count"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Genres_texts"
            }
          },
          "texts@count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyOrders.Genres_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MyOrders.Genres-create": {
        "title": "Genres (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "parent_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Genres-create"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Genres_texts-create"
            }
          }
        },
        "required": [
          "ID"
        ]
      },
      "MyOrders.Genres-update": {
        "title": "Genres (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "parent_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Genres-create"
            }
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Genres_texts-create"
            }
          }
        }
      },
      "MyOrders.Genres_texts": {
        "title": "Genres_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MyOrders.Genres_texts-create": {
        "title": "Genres_texts (for create)",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "locale",
          "ID"
        ]
      },
      "MyOrders.Genres_texts-update": {
        "title": "Genres_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "MyOrders.Order": {
        "title": "Order",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Order_Items"
            }
          },
          "Items@count": {
            "$ref": "#/components/schemas/count"
          },
          "buyer": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MyOrders.Order_Items": {
        "title": "Order_Items",
        "type": "object",
        "properties": {
          "up_": {
            "$ref": "#/components/schemas/MyOrders.Order"
          },
          "up__ID": {
            "type": "integer",
            "format": "int32"
          },
          "pos": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyOrders.Product"
              }
            ],
            "nullable": true
          },
          "product_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MyOrders.Order_Items-create": {
        "title": "Order_Items (for create)",
        "type": "object",
        "properties": {
          "up__ID": {
            "type": "integer",
            "format": "int32"
          },
          "pos": {
            "type": "integer",
            "format": "int32"
          },
          "product_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "required": [
          "up__ID",
          "pos"
        ]
      },
      "MyOrders.Order_Items-update": {
        "title": "Order_Items (for update)",
        "type": "object",
        "properties": {
          "product_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MyOrders.Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "genre": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyOrders.Genres"
              }
            ],
            "nullable": true
          },
          "genre_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal"
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyOrders.Currencies"
              }
            ],
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "image": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrders.Product_texts"
            }
          },
          "texts@count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyOrders.Product_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "MyOrders.Product_texts": {
        "title": "Product_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          }
        }
      },
      "MyOrders.Product_texts-create": {
        "title": "Product_texts (for create)",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          }
        },
        "required": [
          "locale",
          "ID"
        ]
      },
      "MyOrders.Product_texts-update": {
        "title": "Product_texts (for update)",
        "type": "object",
        "properties": {
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}