_schema-version: 3.3.0
ID: books
version: 1.0.0
description: "Demo CDC  login with AMS and IAS."
parameters:
  enable-parallel-deployments: true
  deploy_mode: html5-repo
build-parameters:
  before-all:
    - builder: custom
      commands:
        - npm ci
        - npx cds build --production
        - mkdir -p resources

modules:
  - name: books-ams-policies-deployer
    type: javascript.nodejs
    path: gen/policies
    parameters:
      buildpack: nodejs_buildpack
      no-route: true
      no-start: true
      tasks:
        - name: deploy-dcl
          command: npm start
          memory: 512M
    requires:
      - name: ams-books-ias
        parameters:
          config:
            credential-type: X509_GENERATED
            app-identifier: policy-deployer
  - name: books-srv
    type: nodejs
    path: gen/srv
    properties:
      AMS_DCL_ROOT: ams/dcl
    parameters:
      buildpack: nodejs_buildpack
      readiness-health-check-type: http
      readiness-health-check-http-endpoint: /health
    build-parameters:
      builder: npm
    provides:
      - name: srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
          AMS_DCL_ROOT: ams/dcl
    requires:
      - name: ams-books-ias
        parameters:
          config:
            credential-type: X509_GENERATED
      - name: books-destination
      - name: books-cloud-logging
      - name: books-postgres


  #----AppRouter Module ------------------------------------------------
  - name: books
    type: approuter.nodejs
    path: app/router
    parameters:
      keep-existing-routes: true
      disk-quota: 256M
      memory: 256M
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
      - name: books-cloud-logging
      - name: books-destination
      - name: html5_repo_runtime

      - name: ams-books-ias
        parameters:
          config:
            credential-type: X509_GENERATED
            


  - name: books-postgres-deployer
    type: nodejs
    path: gen/pg
    parameters:
      buildpack: nodejs_buildpack
      no-route: true
      no-start: true
      tasks:
        - name: deploy-to-postgresql
          command: npm start
    requires:
      - name: books-postgres

resources:
  - name: ams-books-ias
    # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    parameters:
      path: ./ias-config.json
      service-plan: application
      service: identity
      service-name: ams-books-ias
      display-name: Books Identity (${org}-${space})`

  #      grant_type: , "authorization_code_pkce_s256"

  # ------------------------------------------------------------
  - name: books-destination
    # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    requires:
      - name: srv-api
    parameters:
      service: destination
      service-plan: lite
      config:
        HTML5Runtime_enabled: true
        init_data:
          instance:
            existing_destinations_policy: update
            destinations:
              - Name: books-srv
                URL: ~{srv-api/srv-url}
                Authentication: NoAuthentication
                Type: HTTP
                ProxyType: Internet
                HTML5.IASDependencyName: books-api
                HTML5.DynamicDestination: true
                HTML5.ForwardAuthToken: true
              - Name: ui5
                URL: https://ui5.sap.com
                Authentication: NoAuthentication
                Type: HTTP
                ProxyType: Internet
  # ------------------------------------------------------------

  - name: books-cloud-logging
    type: org.cloudfoundry.managed-service
    parameters:
      service: cloud-logging
      service-plan: standard
      config:
        ingest_otlp:
          enabled: true

  - name: books-application-logs
    type: org.cloudfoundry.managed-service
    parameters:
      service: application-logs
      service-plan: lite

  - name: html5_repo_runtime
    # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime
      service-name: html5_repo_runtime-service
  - name: books-postgres
    type: org.cloudfoundry.managed-service
    parameters:
      service: postgresql-db
      service-plan: development


